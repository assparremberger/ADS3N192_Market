
package view;

import dao.CidadeDAO;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cidade;

/**
 *
 * @author assparremberger
 */
public class ListCidades extends javax.swing.JInternalFrame {

    // este objeto receberá a referência do painel da tela inicial, para que 
    // a tela FrmCidades possa ser aberta quando o usuário clicar no botão Editar
    JDesktopPane jdpPainelTelaInicial;
    
    /**
     * Creates new form ListClientes
     */
    public ListCidades() {
        initComponents();
        carregarTabela();
    }
    
    public ListCidades( JDesktopPane jdp) {
        initComponents();
        carregarTabela();
        jdpPainelTelaInicial = jdp;
    }
    
    // método público para que ao editar uma cidade, possa ser recarregada a tabela de cidades
    public void carregarTabela() {
        List<Cidade> lista = CidadeDAO.getCidades();
        DefaultTableModel model = new DefaultTableModel();
        String[] colunas = {"Código", "Nome"};
        
       
            
        model.setColumnIdentifiers(colunas);
        
        for (Cidade cid : lista) {
            Object[] linha = {cid.getId(), cid.getNome() };
            model.addRow( linha );
        }
        
        tableCidades.setModel( model );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCidades = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Lista de Clientes");

        tableCidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Porto Alegre"},
                {"2", "Torres"}
            },
            new String [] {
                "Código", "Nome"
            }
        ));
        jScrollPane1.setViewportView(tableCidades);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(btnEditar)
                .addGap(55, 55, 55)
                .addComponent(btnExcluir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int linha = tableCidades.getSelectedRow();
        if( linha < 0 ){
            JOptionPane.showMessageDialog(this, 
                    "Você deve selecionar uma cidade");
        }else{
            int idCidade = (int) tableCidades.getValueAt(linha, 0);
            FrmCidade tela = new FrmCidade(idCidade, this );
            jdpPainelTelaInicial.add( tela );
            tela.setVisible( true );
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = tableCidades.getSelectedRow();   
        if( linha < 0 ){
            JOptionPane.showMessageDialog(this, 
                "Você deve selecionar uma cidade!");
        }else{
            int id = (int) tableCidades.getValueAt(linha, 0);
            Cidade cid = CidadeDAO.getCidadeById( id );
            int resposta = JOptionPane.showConfirmDialog(this, 
                    "Confirma a exclusão da cidade " + cid.getNome() + "?", 
                    "Excluir Cidade", JOptionPane.YES_NO_OPTION);
            if( resposta == JOptionPane.YES_OPTION ){
                CidadeDAO.excluir( cid );
                carregarTabela();
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCidades;
    // End of variables declaration//GEN-END:variables
}
